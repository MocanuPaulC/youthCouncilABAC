@startuml
' tested userstories
'26 7

abstract User {
    firstName : String
    lastName : String
    email : String
    password : String
    postcode : String
}

abstract Admin {

}

class GeneralAdmin {

}

class CouncilAdmin {
    
}

class Member {
    isModerator : boolean
}

class YouthCouncil {
    councilName : String
    municipalityName : String
    councilLogo : String
    councilQrCode : String
    afterElection : boolean
    pathToModulesJson : String
}

abstract Displayable {
    title : String
    description : String
    images : List<String>
    videos : List<String>
}

class CallForIdeas {

}

class Idea {
}

class InformativePage {

}

class ActionPoint {
    theme : String
    label : Label
}

class Annoucement {

}

class Theme {
    name : String
}

enum Label {
    NOT_INCLUDED
    INCLUDED
    IN_PROGRESS
    REALIZED
}

class NewsFeed {

}

class Reaction {
    emoji : Emoji
}

class Share {

}

enum Emoji {
    LIKE
    HEART
    ROCKET
    POOP
    SKELETON
}




GeneralAdmin --|> Admin
CouncilAdmin --|> Admin
Member --|> User
Admin --|> User


CallForIdeas --|> Displayable
Idea --|> Displayable 
Idea --* CallForIdeas : ideas
InformativePage --|> Displayable
ActionPoint --|> Displayable
Annoucement --|> Displayable

YouthCouncil "*"--"*" Member : CouncilMembers
YouthCouncil "*"--"*" Member : BlockedMembers
YouthCouncil "1"--"*" CouncilAdmin

YouthCouncil "1"--"*" Displayable : displayedModules
YouthCouncil "1"--"*" Displayable : defaultModules



Theme --o ActionPoint
Theme --o Idea

Annoucement --* NewsFeed

Displayable "1" -- "*" Reaction : reactions
Displayable "1" -- "*" Share : shares

Share "*"--"1" User
Reaction "*"--"1" User


' Start design class diagram
class PageVisit {
    page : String
    starttime : DateTime
    endtime : DateTime
}

interface UserRepository{
    save(user : User)
    delete(user : User)
    findAll() : List<User>
    findById(id : Long) : User
    findByEmail(email : String) : User
}
class UserRepositoryImpl implements UserRepository{

}

interface DisplayableRepository{
    save(displayable : Displayable)
    delete(displayable : Displayable)
    findAll() : List<Displayable>
    findById(id : Long) : Displayable
}
class DisplayableRepositoryImpl implements DisplayableRepository{

}
interface YouthCouncilRepository{
    save(youthCouncil : YouthCouncil)
    delete(youthCouncil : YouthCouncil)
    findAll() : List<YouthCouncil>
    findById(id : Long) : YouthCouncil
}
class YouthCouncilRepositoryImpl implements YouthCouncilRepository{
}
interface UserService{
    getAllUsers() : List<User>

}
class UserServiceImpl implements UserService{
    modelMapper : ModelMapper
}
interface DisplayableService{
    getAllDisplayables() : List<Displayable>

}
class DisplayableServiceImpl implements DisplayableService{
    modelMapper : ModelMapper
}
interface YouthCouncilService{
    getAllCouncils() : List<YouthCouncil>

}
class YouthCouncilServiceImpl implements YouthCouncilService{
    modelMapper : ModelMapper
}

class DisplayableController{

}

class YouthCouncilController{
}

UserServiceImpl -- UserRepository
DisplayableServiceImpl -- DisplayableRepository
YouthCouncilServiceImpl -- YouthCouncilRepository
YouthCouncilServiceImpl -- DisplayableRepository
YouthCouncilController -- YouthCouncilService

DisplayableServiceImpl -- UserRepository


@enduml